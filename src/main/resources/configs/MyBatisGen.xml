<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC
        "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration>

    <!-- 可以用于加载配置项或者配置文件，在整个配置文件中就可以使用${propertyKey}的方式来引用配置项
    resource：配置资源加载地址，使用resource，MBG从classpath开始找 -->
    <!--<properties resource="" url="" />-->

    <!-- !!!! Driver Class Path !!!! -->
    <classPathEntry location="F:\IDESoftWare\instantclient_11_2_64\jdbc_jar\mysql-connector-java-6.0.6.jar"/>

    <!--
        context:生成一组对象的环境
        id:必选，上下文id，用于在生成错误时提示
        defaultModelType:指定生成对象的样式
            1，conditional：类似hierarchical；
            2，flat：所有内容（主键，blob）等全部生成在一个对象中；
            3，hierarchical：主键生成一个XXKey对象(key class)，Blob等单独生成一个对象，其他简单属性在一个对象中(record class)
        targetRuntime:
            1，MyBatis3：默认的值，生成基于MyBatis3.x以上版本的内容，包括XXXBySample；
            2，MyBatis3Simple：类似MyBatis3，只是不生成XXXBySample；
        introspectedColumnImpl：类全限定名，用于扩展MBG
    -->
    <context id="context" defaultModelType="conditional" targetRuntime="MyBatis3">

        <!--
            自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；
            一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖
         -->
        <!--<property name="autoDelimitKeywords" value="false"/>-->

        <!-- beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，比如ORACLE就是双引号，MYSQL默认是`反引号； -->
        <!--<property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>-->

        <!-- 生成的Java文件的编码 -->
        <property name="javaFileEncoding" value="UTF-8"/>
        <!-- 格式化java代码 -->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
        <!-- 格式化XML代码 -->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>

        <plugin type="org.mybatis.generator.plugins.SerializablePlugin" />
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin" />
        <plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin" />

        <commentGenerator>
            <!-- 是否生成表注释 -->
            <property name="suppressAllComments" value="true"/>
            <property name="suppressDate" value="true"/>
        </commentGenerator>

        <!-- !!!! Database Configurations !!!! -->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver" connectionURL="jdbc:mysql://192.168.145.170:3306/jagilekit?characterEncoding=utf8&amp;nullCatalogMeansCurrent=true&amp;nullNamePatternMatchesAll=true&amp;useSSL=false" userId="root" password="123456"/>

        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- !!!! Model Configurations !!!! -->
        <javaModelGenerator targetPackage="com.chieftain.agile.entity" targetProject="THIS_CONFIGURATION_IS_NOT_REQUIRED">
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!-- !!!! Mapper XML Configurations !!!! -->
        <sqlMapGenerator targetPackage="com.chieftain.agile.dao" targetProject="THIS_CONFIGURATION_IS_NOT_REQUIRED">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!-- !!!! Mapper Interface Configurations !!!! -->
        <!--
            MyBatis3:
                ANNOTATEDMAPPER: 基于注解的 Mapper 接口，不会有对应的 XML 映射文件
                MIXEDMAPPER:XML 和注解的混合形式，(上面这种情况中的)SqlProvider注解方法会被 XML 替代。
                XMLMAPPER: 所有的方法都在 XML 中，接口调用依赖 XML 文件。
            MyBatis3Simple:
                ANNOTATEDMAPPER: 基于注解的 Mapper 接口，不会有对应的 XML 映射文件
                XMLMAPPER: 所有的方法都在 XML 中，接口调用依赖 XML 文件。
            Ibatis2Java2 或 **Ibatis2Java5**:
                IBATIS: 生成的对象符合 iBATIS 的 DAO 框架（不建议使用）。
                GENERIC-CI: 生成的对象将只依赖于 SqlMapClient，通过构造方法注入。
                GENERIC-SI: 生成的对象将只依赖于 SqlMapClient，通过setter方法注入。
                SPRING: 生成的对象符合 Spring 的 DAO 接口
        -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.chieftain.agile.dao" targetProject="THIS_CONFIGURATION_IS_NOT_REQUIRED">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!-- !!!! Table Configurations !!!! -->
        <table tableName="sys_permission" enableCountByExample="false" enableDeleteByExample="false" enableSelectByExample="false"
               enableUpdateByExample="false">
            <!-- 默认为false，如果设置为true，在生成的SQL中，table名字不会加上catalog或schema； -->
            <property name="ignoreQualifiersAtRuntime" value="false"/>
            <property name="useActualColumnNames" value="false"/>
        </table>
    </context>
</generatorConfiguration>
